{
	"info": {
		"_postman_id": "27bb9c58-c4a9-46a3-afc6-9df6a1486f57",
		"name": "smile",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "getUser",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query{\r\n    getUser(id:1){\r\n        id\r\n        roleName\r\n        firstName\r\n        email\r\n        birthday\r\n        bio\r\n        image\r\n        facebookURL\r\n        telegramURL\r\n        gmail\r\n        createdAt\r\n        favorites{\r\n            post{\r\n                body\r\n                title\r\n                type\r\n            }\r\n        }\r\n        userUniversityNumbers{\r\n            id\r\n            universityNumber\r\n            year\r\n        }\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllUser",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query{\r\n    getAllUser{\r\n        id\r\n        roleName\r\n        firstName\r\n        email\r\n        birthday\r\n        bio\r\n        image\r\n        facebookURL\r\n        telegramURL\r\n        gmail\r\n        createdAt\r\n        updatedAt\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "createUser",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation{\r\n    createUser(roleName:\"sa\",firstName:\"df\",lastName:\"efef\",email:\"asd\",password:\"fkkf\"){\r\n        roleName\r\n        firstName\r\n        lastName\r\n        email\r\n        password\r\n        createdAt\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "addPost",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation{\r\n    addPost(subjectId:6 ,type:\"we\",body:\"rfr\",UserId:1){\r\n        type\r\n        title\r\n        body\r\n        subjectId\r\n        UserId\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllGeneralPost",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query{\r\n    getAllGeneralPost{\r\n        id\r\n        body\r\n        user{\r\n             firstName\r\n             email\r\n        }\r\n        comments{\r\n            body\r\n            user{\r\n                firstName\r\n                lastName\r\n                email\r\n            }   \r\n        }\r\n        commentsCnt\r\n        likes{\r\n            user{\r\n                firstName\r\n                lastName\r\n                email\r\n            }\r\n        }\r\n        likesCnt\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllPostOfUser",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query{\r\n    getAllPostOfUser(UserId:2){\r\n         id\r\n        subjectId\r\n        type\r\n        title\r\n        body\r\n        createdAt\r\n        updatedAt\r\n        user{\r\n             firstName\r\n             email\r\n        }\r\n         comments{\r\n        body\r\n        user{\r\n            firstName\r\n            lastName\r\n            email\r\n        }   \r\n        }\r\n        commentsCnt\r\n        likes{\r\n            user{\r\n                firstName\r\n                lastName\r\n                email\r\n            }\r\n        }\r\n        likesCnt\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Like",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation{\r\n    like(UserId:1,PostId:2 )\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllPostOfSubject",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query{\r\n    getAllPostOfSubject(subjectId:[2]){\r\n        id\r\n        subjectId\r\n        type\r\n        title\r\n        body\r\n        createdAt\r\n        updatedAt\r\n        user{\r\n             firstName\r\n             email\r\n        }\r\n         comments{\r\n        body\r\n        user{\r\n            firstName\r\n            lastName\r\n            email\r\n        }   \r\n        }\r\n        commentsCnt\r\n        likes{\r\n            user{\r\n                firstName\r\n                lastName\r\n                email\r\n            }\r\n        }\r\n        likesCnt\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "addComment",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation{\r\n    addComment(body:\"waw\",UserId:1,PostId:2)\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "addFavorite",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation{\r\n    addFavorite(UserId: 1 ,PostId:2 )\r\n\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteComment",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation{\r\n    deleteComment(id:2)\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "banUser",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation{\r\n    banUser(UserId: 1)\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "getBansUser",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query{\r\n     getBansUser{\r\n        id\r\n        UserId\r\n        user{\r\n            roleName\r\n            firstName\r\n            email\r\n            birthday\r\n            bio\r\n            image\r\n            facebookURL\r\n            telegramURL\r\n            gmail\r\n            createdAt\r\n            updatedAt\r\n        }\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteFavorite",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation{\r\n    deleteFavorite(id:1)\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "addComplaints",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation{\r\n    addComplaint(UserId:1,title:null,body:\"hsss\"){\r\n        body\r\n        title\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "makeComplaintAsDone",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation{\r\n    makeComplaintAsDone(id:2)\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllComplaints",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query{\r\n    getAllComplaints{\r\n        id\r\n        title\r\n        body\r\n        user\r\n        {\r\n            roleName\r\n            firstName\r\n            email\r\n            birthday\r\n            bio\r\n            image\r\n            facebookURL\r\n            telegramURL\r\n            gmail\r\n            createdAt\r\n            updatedAt\r\n        }\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteComplaint",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation{\r\n    deleteComplaint(id:1)\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllPosts",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query{\r\n    getAllPosts{\r\n        id\r\n        body\r\n        title\r\n        type\r\n        subjectId\r\n        user{\r\n             firstName\r\n             email\r\n        }\r\n        comments{\r\n            body\r\n            user{\r\n                firstName\r\n                lastName\r\n                email\r\n            }   \r\n        }\r\n        commentsCnt\r\n        likes{\r\n            user{\r\n                firstName\r\n                lastName\r\n                email\r\n            }\r\n        }\r\n        likesCnt\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "addUsersUniversityNumbers",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation{\r\n    addUsersUniversityNumbers(UserId: 1,universityNumber: 12 ,year: \"\"){\r\n        id\r\n        universityNumber\r\n        year\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteUsersUniversityNumbers",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation{\r\n    deleteUsersUniversityNumbers(id:2)\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "unBanUser",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation{\r\n    unBanUser(UserId : 1)\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllAds",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query{\r\n    getAllAds{\r\n        id\r\n        title\r\n        body\r\n        expireIn\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllPosts",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query{\r\n    getAllPosts{\r\n        id\r\n        subjectId\r\n        type\r\n        title\r\n        body\r\n        createdAt\r\n        updatedAt\r\n        user{\r\n             firstName\r\n             email\r\n        }\r\n        comments{\r\n        body\r\n        user{\r\n            firstName\r\n            lastName\r\n            email\r\n        }   \r\n        }\r\n        commentsCnt\r\n        likes{\r\n            user{\r\n                firstName\r\n                lastName\r\n                email\r\n            }\r\n        }\r\n        likesCnt\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllPostRequests",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query{\r\n    getAllPostRequests{\r\n        id\r\n        type\r\n        title\r\n        body\r\n        subjectId\r\n        createdAt\r\n        updatedAt\r\n        user{\r\n             firstName\r\n             lastName\r\n             email\r\n        }\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "acceptPostRequest",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation{\r\n    acceptPostRequest(id: 3){\r\n        subjectId\r\n        type\r\n        title\r\n        body\r\n        UserId\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "deletePostRequest",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation{\r\n    deletePostRequest(id: 2)\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		}
	]
}